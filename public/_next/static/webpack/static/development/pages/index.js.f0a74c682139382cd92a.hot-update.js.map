{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f0a74c682139382cd92a.hot-update.js","sources":["webpack:///./components/contextAPI/cartContext.js","webpack:///./components/stickyTopBar.js","webpack:///./utils/customerManager.js"],"sourcesContent":["import React, { createContext , useState , useEffect } from 'react';\r\nexport const CartContext = createContext();\r\nconst CARTMANAGER = require('../../utils/cartManager');\r\nconst USER = require('../../utils/customerManager');\r\nconst SIZE = CARTMANAGER.getCartSize();\r\n\r\nfunction CartContextProvider(props){\r\n    const [ cartSize , setSize ] = useState(SIZE);\r\n    const [ wishlistSize , setWishlistSize ] = useState(SIZE);\r\n\r\n    const addToCart = async (item , store) => {\r\n      let promise = new Promise((resolve , reject) => {\r\n            setTimeout(() => {\r\n                switch(store){\r\n                    case \"cart\" : \r\n                        if(CARTMANAGER.addToCart(item)){\r\n                             resolve ({ success : true , cartSize : setSize(CARTMANAGER.getCartSize()) , message : \"added to cart\"});\r\n                        }else{\r\n                            reject ({ success : false , cartSize : setSize(CARTMANAGER.getCartSize()) , message : \"failed to add to cart\"});   \r\n                        }\r\n                    break;\r\n                    case \"wishlist\" : \r\n                        if(CARTMANAGER.addToWishlist(item)){\r\n                            resolve ({ success : true , wishlistSize : setWishlistSize(CARTMANAGER.getWishlistSize()) , message : \"added to wishlist\"});\r\n                        }else{\r\n                            reject ({ success : false , wishlistSize : setWishlistSize(CARTMANAGER.getWishlistSize()) , message : \"failed to add to wishlist\"});\r\n                        }\r\n                        break;\r\n                    case \"saveForLater\":\r\n                        if(CARTMANAGER.addToSavedForLater(item)){\r\n                            resolve ({ success : true , cartSize : setSize(CARTMANAGER.getSavedForLaterSize()) , message : \"added to saved for later\"});\r\n                         }else{\r\n                            reject ({ success : false , cartSize : setSize(CARTMANAGER.getSavedForLaterSize()) , message : \"failed to save for later\"}); \r\n                         }\r\n                         break;\r\n                    case \"checkout\" :\r\n                        if(CARTMANAGER.addToCheckout(item)){\r\n                            resolve ({success : true , message : \"Items have been successfully added to checkout .\"});\r\n                        }else{\r\n                            reject({success : false , message : \"Failed to add to checkout .\"});\r\n                        }\r\n                        break;\r\n                    default :\r\n                     return getCart();\r\n                }\r\n               \r\n            }, 2000);\r\n        })\r\n       return await promise;\r\n    }\r\n    const addToSavedForLater = async (item) => {\r\n        let promise = await addToCart(item , \"saveForLater\");\r\n        return  promise;\r\n    }\r\n    const addToWishlist = async (item) => {\r\n        let promise = await addToCart(item , \"wishlist\");\r\n        return  promise;\r\n    }\r\n    const getCart = () => {\r\n        return CARTMANAGER.getCart();\r\n    }\r\n    const getSavedForLater = () => {\r\n        return CARTMANAGER.getSavedForLater();\r\n    }\r\n    const clearBasket = () => {\r\n        return CARTMANAGER.clearBasket();\r\n    }\r\n    const getCheckout = () => {\r\n        return CARTMANAGER.getCheckout();\r\n    }\r\n    const confirmBakset = (basket) => {\r\n        CARTMANAGER.setBasketConfirmation(basket);\r\n    }\r\n    const getBasketConfirmation = () => {\r\n        return CARTMANAGER.getBasketConfirmation();\r\n    }\r\n    const getCartSize = () => {\r\n        return CARTMANAGER.getCartSize();\r\n    }\r\n    const getSavedForLaterSize = () => {\r\n        return CARTMANAGER.getSavedForLaterSize();\r\n    }\r\n    const getWishlist = () => {\r\n        return CARTMANAGER.getWishlist();\r\n    }\r\n    const getWishlistSize = () => {\r\n        return CARTMANAGER.getWishlistSize();\r\n    }\r\n    const addToCheckout = async (items) => {\r\n        let promise = await addToCart(items , \"checkout\");\r\n        return  promise;\r\n    }\r\n    const getCustomerProfile =() => {\r\n        return USER.getCustomerProfile();\r\n    }\r\n    const loggedInUser =() => {\r\n        return USER.isUserLoggedIn();\r\n    }\r\n    const deleteFromCart = async (sku , store) => {\r\n        let promise = new Promise((resolve , reject) => {\r\n              setTimeout(() => {\r\n                  switch(store) {\r\n                      case \"saveForLater\" :\r\n                        if(CARTMANAGER.deleteFromSavedForLater(sku)){\r\n                            resolve({ success : true , cartSize : setSize(CARTMANAGER.getSavedForLaterSize()) , message : \"Item has been deleted.\"});\r\n                         }else{\r\n                          reject({ success : false , cartSize : setSize(CARTMANAGER.getSavedForLaterSize()) , message : \"Error deleting item.\"});\r\n                         }\r\n                         break;\r\n                     case \"cart\" :\r\n                        if(CARTMANAGER.deleteFromCart(sku)){\r\n                            resolve ({ success : true , cartSize : setSize(CARTMANAGER.getCartSize()) , message : \"Item has been deleted.\"});\r\n                         }else{\r\n                          reject ({ success : false , cartSize : setSize(CARTMANAGER.getCartSize()) , message : \"Error deleting item.\"}); \r\n                         }\r\n                         break;\r\n                    case \"wishlist\" :\r\n                            if(CARTMANAGER.deleteFromWishlist(sku)){\r\n                                resolve ({ success : true , cartSize : setSize(CARTMANAGER.getWishlistSize()) , message : \"Item has been deleted.\"});\r\n                             }else{\r\n                              reject ({ success : false , cartSize : setSize(CARTMANAGER.getWishlistSize()) , message : \"Error deleting item.\"}); \r\n                             }\r\n                             break;\r\n                    default:\r\n                        return null;\r\n                  }\r\n                 \r\n              }, 2000);\r\n          })\r\n       return await promise;\r\n      }\r\n      const deleteFromSavedForLater = async (sku) => {\r\n        let promise = await deleteFromCart(sku , \"saveForLater\");\r\n       return promise;\r\n      }\r\n      const deleteFromWishlist = async (sku) => {\r\n        let promise = await deleteFromCart(sku , \"wishlist\");\r\n       return promise;\r\n      }\r\n      const signOut = async () => {\r\n        const promise = await new Promise((resolve , reject) => {\r\n            setTimeout(()=> {\r\n                if(USER.signOut()){\r\n                    resolve({success : true , message : \"Successfully signed out\"});\r\n                }else{\r\n                    reject({success : false});\r\n                }\r\n            }, 1000);\r\n        });\r\n        return await promise;\r\n      }\r\n    return (<CartContext.Provider value = { { cartSize , wishlistSize , addToCart , \r\n              addToWishlist , getCart,\r\n              clearBasket , addToCheckout,\r\n              getCheckout, confirmBakset , \r\n              getBasketConfirmation , getCartSize ,\r\n              deleteFromCart, addToSavedForLater , deleteFromSavedForLater , \r\n              getSavedForLaterSize , getSavedForLater , deleteFromWishlist , \r\n              getWishlist, getWishlistSize , getCustomerProfile , loggedInUser,\r\n              signOut\r\n               } }>\r\n              { props.children }\r\n           </CartContext.Provider>) ;\r\n}\r\n\r\nexport default CartContextProvider;","import React , {useState , useEffect , useContext } from 'react';\r\nimport { CartContext } from './contextAPI/cartContext';\r\nimport {\r\n      Navbar, Nav, \r\n      NavItem, Dropdown, MenuItem, Glyphicon\r\n} from 'react-bootstrap';\r\nimport Router from 'next/router'\r\n\r\nfunction TopBarComponent () \r\n{\r\n  const [showLogin , setShowLogin] = useState(true);\r\n  const [user , setUser] = useState(\"\");\r\n  const { getCustomerProfile , loggedInUser } = useContext(CartContext);\r\n\r\n  useEffect(()=> {\r\n    let userId = localStorage.getItem(\"userId\");\r\n    const profile = getCustomerProfile();\r\n    const loggedIn = loggedInUser();\r\n    console.log(\"profile :: \" + JSON.stringify(profile));\r\n    console.log(loggedIn);\r\n    if(loggedIn){\r\n          setShowLogin(false);\r\n          setUser(`${profile.firstName}`);\r\n    }\r\n  },[]);\r\n      return <>\r\n                    <Navbar className = \"__topbar_nav_main hidden-xs hidden-sm\" >\r\n                        {/* hide on xs, sm and md */}\r\n                        < Nav className = \"__topbar_nav_main_items pull-right hidden-xs hidden-sm\" >\r\n                               \r\n                              { showLogin ? <NavItem className=\"item\" onClick={() => Router.push('/signin-up/register')} tabIndex=\"1\" eventkey = { 2 }> Sign In / Sign Up </NavItem> :\r\n                                <User fullName = {user}/> }\r\n                               <NavItem className=\"item\" onClick={() => Router.push('/info/about-us')} eventkey={6} href=\"#\" tabIndex=\"3\"> About iShop </NavItem>\r\n                               <NavItem className=\"item\" eventkey={5} href=\"#\" tabIndex=\"2\"> Contact Us </NavItem>\r\n                        </Nav>\r\n\r\n                  </Navbar>\r\n            </>;\r\n}\r\nexport default TopBarComponent;\r\nfunction User(prop){\r\n      const { signOut } = useContext(CartContext);\r\n\r\n       const logOut = async () => {\r\n          const response = await signOut();\r\n          if(response.success){\r\n             Router.push('/'); \r\n          }\r\n       }\r\n  return <NavItem >\r\n            <Dropdown>\r\n             <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n               <i className=\"fas fa-user\"></i> Hello, {prop.fullName}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n            <Dropdown.Item href=\"\"  onClick={() => Router.push('/')}>Manage My Account</Dropdown.Item>\r\n            <Dropdown.Item href=\"#\" onClick={() => Router.push('/')}>Check My Order History</Dropdown.Item>\r\n            <Dropdown.Item href=\"#\" onClick={() => Router.push('/')}>Track My Open Orders</Dropdown.Item>\r\n            <Dropdown.Item href=\"#\" onClick={() => logOut() }>Sign Out</Dropdown.Item>\r\n         </Dropdown.Menu>\r\n        </Dropdown>\r\n      </NavItem>\r\n}\r\n\r\n","const getCustomerProfile = () => {\r\n    const profile = localStorage.getItem(\"customerProfile\");\r\n    if(profile) {\r\n        return JSON.parse(profile);\r\n    }else{\r\n        return {};\r\n    }\r\n}\r\nconst isUserLoggedIn = () => {\r\n    const profile = getCustomerProfile();\r\n    if(profile && profile.status && \"loggedIn\" == profile.status){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\nconst signOut = () => {\r\n    clearItem(\"customerProfile\");\r\n    return true;\r\n}\r\nconst clearItem = (item) => {\r\n    localStorage.removeItem(item);\r\n}\r\nmodule.exports = {\r\n    getCustomerProfile,\r\n    isUserLoggedIn,\r\n    signOut\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AA9BA;AAiCA;AACA;AArCA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuvBA;AA0BA;AACA;AA9BA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAVA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;AC9DA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;;;;A","sourceRoot":""}